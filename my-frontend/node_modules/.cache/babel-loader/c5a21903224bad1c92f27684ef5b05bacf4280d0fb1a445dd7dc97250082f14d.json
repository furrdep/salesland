{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\santi\\\\Desktop\\\\salesland\\\\my-frontend\\\\src\\\\components\\\\GaleriaCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction GaleriaCard({\n  galeria\n}) {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedDescripcion, setEditedDescripcion] = useState(galeria.descripcion);\n  const [editedImage, setEditedImage] = useState(null);\n  const handleEditSave = async () => {\n    if (isEditing) {\n      try {\n        const formData = new FormData();\n        formData.append(\"descripcion\", editedDescripcion);\n\n        // Si se ha seleccionado una nueva imagen, agrégala al formData\n        if (editedImage) {\n          formData.append(\"imagen\", editedImage);\n        }\n        const response = await fetch(`/api/galeria/${galeria.id}`, {\n          method: 'PUT',\n          body: formData // Usamos formData aquí en lugar de JSON\n        });\n\n        const data = await response.json();\n        console.log(data);\n        // Aquí puedes hacer algo con la respuesta...\n      } catch (error) {\n        console.error('Error al actualizar la descripción de la galería:', error);\n      }\n    }\n    setIsEditing(!isEditing);\n  };\n  const handleDelete = async () => {\n    try {\n      const response = await fetch(`http://localhost:3001/api/galeria/${galeria.id}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        // Aquí puedes actualizar el estado para reflejar la eliminación.\n        // Por ejemplo, puedes emitir un evento para que el componente padre actualice la lista de galerías.\n        console.log(\"Galería eliminada correctamente\");\n      } else {\n        console.error('Error al eliminar la galería.');\n      }\n    } catch (error) {\n      console.error('Error al eliminar la galería:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"galeria-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: editedDescripcion,\n          onChange: e => setEditedDescripcion(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => setEditedImage(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) : galeria.descripcion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `http://localhost:3001/imagenesdegaleria/${galeria.imagen}`,\n      alt: galeria.imagen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEditSave,\n      children: isEditing ? 'Guardar' : 'Editar Descripción'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDelete,\n      children: \"Eliminar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(GaleriaCard, \"0bDmXMXBrfetf3DejE/g1PCA78I=\");\n_c = GaleriaCard;\nexport default GaleriaCard;\nvar _c;\n$RefreshReg$(_c, \"GaleriaCard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","GaleriaCard","galeria","_s","isEditing","setIsEditing","editedDescripcion","setEditedDescripcion","descripcion","editedImage","setEditedImage","handleEditSave","formData","FormData","append","response","fetch","id","method","body","data","json","console","log","error","handleDelete","ok","className","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","type","files","src","imagen","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/santi/Desktop/salesland/my-frontend/src/components/GaleriaCard.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction GaleriaCard({ galeria }) {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [editedDescripcion, setEditedDescripcion] = useState(galeria.descripcion);\r\n    const [editedImage, setEditedImage] = useState(null);\r\n\r\n\r\n    const handleEditSave = async () => {\r\n    if (isEditing) {\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append(\"descripcion\", editedDescripcion);\r\n\r\n            // Si se ha seleccionado una nueva imagen, agrégala al formData\r\n            if (editedImage) {\r\n                formData.append(\"imagen\", editedImage);\r\n            }\r\n\r\n            const response = await fetch(`/api/galeria/${galeria.id}`, {\r\n                method: 'PUT',\r\n                body: formData,  // Usamos formData aquí en lugar de JSON\r\n            });\r\n\r\n            const data = await response.json();\r\n            console.log(data);\r\n            // Aquí puedes hacer algo con la respuesta...\r\n\r\n        } catch (error) {\r\n            console.error('Error al actualizar la descripción de la galería:', error);\r\n        }\r\n    }\r\n    setIsEditing(!isEditing);\r\n};\r\n\r\n    const handleDelete = async () => {\r\n        try {\r\n            const response = await fetch(`http://localhost:3001/api/galeria/${galeria.id}`, {\r\n                method: 'DELETE',\r\n            });\r\n\r\n    \r\n            if (response.ok) {\r\n                // Aquí puedes actualizar el estado para reflejar la eliminación.\r\n                // Por ejemplo, puedes emitir un evento para que el componente padre actualice la lista de galerías.\r\n                console.log(\"Galería eliminada correctamente\");\r\n            } else {\r\n                console.error('Error al eliminar la galería.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error al eliminar la galería:', error);\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"galeria-card\">\r\n            <p>\r\n            {isEditing ? \r\n                <>\r\n                    <textarea value={editedDescripcion} onChange={(e) => setEditedDescripcion(e.target.value)} />\r\n                    <input type=\"file\" onChange={(e) => setEditedImage(e.target.files[0])} />\r\n                </>\r\n                : \r\n                galeria.descripcion\r\n            }\r\n\r\n            </p>\r\n            <img src={`http://localhost:3001/imagenesdegaleria/${galeria.imagen}`} alt={galeria.imagen} />\r\n            <button onClick={handleEditSave}>{isEditing ? 'Guardar' : 'Editar Descripción'}</button>\r\n            <button onClick={handleDelete}>Eliminar</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GaleriaCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}