{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\santi\\\\Desktop\\\\salesland\\\\my-frontend\\\\src\\\\components\\\\EmpresaCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport GaleriaCard from './GaleriaCard';\nimport GaleriaForm from './GaleriaForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmpresaCard({\n  empresa\n}) {\n  _s();\n  const [galerias, setGalerias] = useState([]);\n  const [isEditing, setIsEditing] = useState(false); // Para saber si estamos en modo edición\n  const [editedEmpresa, setEditedEmpresa] = useState({\n    ...empresa\n  }); // Empresa en edición\n\n  useEffect(() => {\n    const fetchGalerias = async () => {\n      try {\n        const response = await fetch(`/api/galeria?empresa=${empresa.id}`);\n        const data = await response.json();\n        setGalerias(data);\n      } catch (error) {\n        console.error(\"Error al obtener las galerías:\", error);\n      }\n    };\n    fetchGalerias();\n  }, [empresa.id]);\n  const handleEditSave = async () => {\n    if (isEditing) {\n      // Lógica para guardar la empresa editada en la base de datos\n      // Por ejemplo, usando fetch con método PUT\n    }\n    setIsEditing(!isEditing);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"empresa-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n        value: editedEmpresa.nombre,\n        onChange: e => setEditedEmpresa({\n          ...editedEmpresa,\n          nombre: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this) : empresa.nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: isEditing ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: editedEmpresa.descripcion,\n        onChange: e => setEditedEmpresa({\n          ...editedEmpresa,\n          descripcion: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this) : empresa.descripcion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: isEditing ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: editedEmpresa.historia,\n        onChange: e => setEditedEmpresa({\n          ...editedEmpresa,\n          historia: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this) : empresa.historia\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: editedEmpresa.fecha,\n        onChange: e => setEditedEmpresa({\n          ...editedEmpresa,\n          fecha: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this) : empresa.fecha\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEditSave,\n      children: isEditing ? 'Guardar' : 'Editar'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Subir galeria:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GaleriaForm, {\n      empresaId: empresa.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), galerias.length > 0 && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Galer\\xEDas de la empresa:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 37\n    }, this), galerias.map(galeria => /*#__PURE__*/_jsxDEV(GaleriaCard, {\n      galeria: galeria\n    }, galeria.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 38\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(EmpresaCard, \"feKdud6pvKNhZ6uwWJ3XrGXtVtI=\");\n_c = EmpresaCard;\nexport default EmpresaCard;\nvar _c;\n$RefreshReg$(_c, \"EmpresaCard\");","map":{"version":3,"names":["React","useState","useEffect","GaleriaCard","GaleriaForm","jsxDEV","_jsxDEV","EmpresaCard","empresa","_s","galerias","setGalerias","isEditing","setIsEditing","editedEmpresa","setEditedEmpresa","fetchGalerias","response","fetch","id","data","json","error","console","handleEditSave","className","children","value","nombre","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","descripcion","historia","type","fecha","onClick","empresaId","length","map","galeria","_c","$RefreshReg$"],"sources":["C:/Users/santi/Desktop/salesland/my-frontend/src/components/EmpresaCard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport GaleriaCard from './GaleriaCard';\r\nimport GaleriaForm from './GaleriaForm';\r\n\r\nfunction EmpresaCard({ empresa }) {\r\n    const [galerias, setGalerias] = useState([]);\r\n    const [isEditing, setIsEditing] = useState(false); // Para saber si estamos en modo edición\r\n    const [editedEmpresa, setEditedEmpresa] = useState({ ...empresa }); // Empresa en edición\r\n\r\n    useEffect(() => {\r\n        const fetchGalerias = async () => {\r\n            try {\r\n                const response = await fetch(`/api/galeria?empresa=${empresa.id}`);\r\n                const data = await response.json();\r\n\r\n                setGalerias(data);\r\n            } catch (error) {\r\n                console.error(\"Error al obtener las galerías:\", error);\r\n            }\r\n        };\r\n\r\n        fetchGalerias();\r\n    }, [empresa.id]);\r\n\r\n    const handleEditSave = async () => {\r\n        if(isEditing) {\r\n            // Lógica para guardar la empresa editada en la base de datos\r\n            // Por ejemplo, usando fetch con método PUT\r\n        }\r\n        setIsEditing(!isEditing);\r\n    };\r\n\r\n    return (\r\n        <div className=\"empresa-card\">\r\n            <h2>\r\n                {isEditing ? \r\n                    <input value={editedEmpresa.nombre} onChange={(e) => setEditedEmpresa({ ...editedEmpresa, nombre: e.target.value })} /> \r\n                    : empresa.nombre}\r\n            </h2>\r\n            <p>\r\n                {isEditing ? \r\n                    <textarea value={editedEmpresa.descripcion} onChange={(e) => setEditedEmpresa({ ...editedEmpresa, descripcion: e.target.value })} /> \r\n                    : empresa.descripcion}\r\n            </p>\r\n            <p>\r\n                {isEditing ? \r\n                    <textarea value={editedEmpresa.historia} onChange={(e) => setEditedEmpresa({ ...editedEmpresa, historia: e.target.value })} />\r\n                    : empresa.historia}\r\n            </p>\r\n            <p>\r\n                {isEditing ? \r\n                    <input type=\"date\" value={editedEmpresa.fecha} onChange={(e) => setEditedEmpresa({ ...editedEmpresa, fecha: e.target.value })} />\r\n                    : empresa.fecha}\r\n            </p>\r\n\r\n            <button onClick={handleEditSave}>{isEditing ? 'Guardar' : 'Editar'}</button>\r\n\r\n            <h3>Subir galeria:</h3>\r\n            <GaleriaForm empresaId={empresa.id} />\r\n            \r\n            {galerias.length > 0 && <h3>Galerías de la empresa:</h3>}\r\n            {galerias.map(galeria => <GaleriaCard key={galeria.id} galeria={galeria} />)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EmpresaCard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,WAAWA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACnD,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC;IAAE,GAAGO;EAAQ,CAAC,CAAC,CAAC,CAAC;;EAEpEN,SAAS,CAAC,MAAM;IACZ,MAAMc,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,wBAAuBV,OAAO,CAACW,EAAG,EAAC,CAAC;QAClE,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAElCV,WAAW,CAACS,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MAC1D;IACJ,CAAC;IAEDN,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,CAACR,OAAO,CAACW,EAAE,CAAC,CAAC;EAEhB,MAAMK,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAGZ,SAAS,EAAE;MACV;MACA;IAAA;IAEJC,YAAY,CAAC,CAACD,SAAS,CAAC;EAC5B,CAAC;EAED,oBACIN,OAAA;IAAKmB,SAAS,EAAC,cAAc;IAAAC,QAAA,gBACzBpB,OAAA;MAAAoB,QAAA,EACKd,SAAS,gBACNN,OAAA;QAAOqB,KAAK,EAAEb,aAAa,CAACc,MAAO;QAACC,QAAQ,EAAGC,CAAC,IAAKf,gBAAgB,CAAC;UAAE,GAAGD,aAAa;UAAEc,MAAM,EAAEE,CAAC,CAACC,MAAM,CAACJ;QAAM,CAAC;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,GACrH3B,OAAO,CAACoB;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eACL7B,OAAA;MAAAoB,QAAA,EACKd,SAAS,gBACNN,OAAA;QAAUqB,KAAK,EAAEb,aAAa,CAACsB,WAAY;QAACP,QAAQ,EAAGC,CAAC,IAAKf,gBAAgB,CAAC;UAAE,GAAGD,aAAa;UAAEsB,WAAW,EAAEN,CAAC,CAACC,MAAM,CAACJ;QAAM,CAAC;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,GAClI3B,OAAO,CAAC4B;IAAW;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACJ7B,OAAA;MAAAoB,QAAA,EACKd,SAAS,gBACNN,OAAA;QAAUqB,KAAK,EAAEb,aAAa,CAACuB,QAAS;QAACR,QAAQ,EAAGC,CAAC,IAAKf,gBAAgB,CAAC;UAAE,GAAGD,aAAa;UAAEuB,QAAQ,EAAEP,CAAC,CAACC,MAAM,CAACJ;QAAM,CAAC;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,GAC5H3B,OAAO,CAAC6B;IAAQ;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACJ7B,OAAA;MAAAoB,QAAA,EACKd,SAAS,gBACNN,OAAA;QAAOgC,IAAI,EAAC,MAAM;QAACX,KAAK,EAAEb,aAAa,CAACyB,KAAM;QAACV,QAAQ,EAAGC,CAAC,IAAKf,gBAAgB,CAAC;UAAE,GAAGD,aAAa;UAAEyB,KAAK,EAAET,CAAC,CAACC,MAAM,CAACJ;QAAM,CAAC;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,GAC/H3B,OAAO,CAAC+B;IAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eAEJ7B,OAAA;MAAQkC,OAAO,EAAEhB,cAAe;MAAAE,QAAA,EAAEd,SAAS,GAAG,SAAS,GAAG;IAAQ;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eAE5E7B,OAAA;MAAAoB,QAAA,EAAI;IAAc;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB7B,OAAA,CAACF,WAAW;MAACqC,SAAS,EAAEjC,OAAO,CAACW;IAAG;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAErCzB,QAAQ,CAACgC,MAAM,GAAG,CAAC,iBAAIpC,OAAA;MAAAoB,QAAA,EAAI;IAAuB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvDzB,QAAQ,CAACiC,GAAG,CAACC,OAAO,iBAAItC,OAAA,CAACH,WAAW;MAAkByC,OAAO,EAAEA;IAAQ,GAA7BA,OAAO,CAACzB,EAAE;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqB,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3E,CAAC;AAEd;AAAC1B,EAAA,CA5DQF,WAAW;AAAAsC,EAAA,GAAXtC,WAAW;AA8DpB,eAAeA,WAAW;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}