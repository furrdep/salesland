{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\santi\\\\Desktop\\\\salesland\\\\my-frontend\\\\src\\\\components\\\\EmpresaForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmpresaForm({\n  empresa = null,\n  onFormCompleted\n}) {\n  _s();\n  const [nombre, setNombre] = useState(empresa ? empresa.nombre : '');\n  const [descripcion, setDescripcion] = useState(empresa ? empresa.descripcion : '');\n  const [fecha, setFecha] = useState(empresa ? empresa.fecha : '');\n  useEffect(() => {\n    if (empresa) {\n      setNombre(empresa.nombre);\n      setDescripcion(empresa.descripcion);\n      setFecha(empresa.fecha);\n    }\n  }, [empresa]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const url = empresa ? `/api/empresa/${empresa.id}` : '/api/empresa';\n    const method = empresa ? 'PUT' : 'POST';\n    const formData = new FormData();\n    formData.append('nombre', nombre);\n    formData.append('descripcion', descripcion);\n    formData.append('fecha', fecha);\n    try {\n      const response = await fetch(url, {\n        method: method,\n        body: formData\n      });\n      const data = await response.json();\n      console.log(data);\n      onFormCompleted && onFormCompleted(); // informar al componente padre si es necesario\n    } catch (error) {\n      console.error('Error al procesar la empresa:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Nombre\",\n      value: nombre,\n      onChange: e => setNombre(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Descripci\\xF3n\",\n      value: descripcion,\n      onChange: e => setDescripcion(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: fecha,\n      onChange: e => setFecha(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: empresa ? 'Editar Empresa' : 'Crear Empresa'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(EmpresaForm, \"pRHUg6xM+o4Mrw5Qlpk9u8VZXL0=\");\n_c = EmpresaForm;\nexport default EmpresaForm;\nvar _c;\n$RefreshReg$(_c, \"EmpresaForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","EmpresaForm","empresa","onFormCompleted","_s","nombre","setNombre","descripcion","setDescripcion","fecha","setFecha","handleSubmit","e","preventDefault","url","id","method","formData","FormData","append","response","fetch","body","data","json","console","log","error","onSubmit","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","required","_c","$RefreshReg$"],"sources":["C:/Users/santi/Desktop/salesland/my-frontend/src/components/EmpresaForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction EmpresaForm({ empresa = null, onFormCompleted }) {\r\n    const [nombre, setNombre] = useState(empresa ? empresa.nombre : '');\r\n    const [descripcion, setDescripcion] = useState(empresa ? empresa.descripcion : '');\r\n    const [fecha, setFecha] = useState(empresa ? empresa.fecha : '');\r\n\r\n    useEffect(() => {\r\n        if (empresa) {\r\n            setNombre(empresa.nombre);\r\n            setDescripcion(empresa.descripcion);\r\n            setFecha(empresa.fecha);\r\n        }\r\n    }, [empresa]);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const url = empresa ? `/api/empresa/${empresa.id}` : '/api/empresa';\r\n        const method = empresa ? 'PUT' : 'POST';\r\n        const formData = new FormData();\r\n\r\n        formData.append('nombre', nombre);\r\n        formData.append('descripcion', descripcion);\r\n        formData.append('fecha', fecha);\r\n\r\n        try {\r\n            const response = await fetch(url, {\r\n                method: method,\r\n                body: formData\r\n            });\r\n\r\n            const data = await response.json();\r\n            console.log(data);\r\n            \r\n            onFormCompleted && onFormCompleted(); // informar al componente padre si es necesario\r\n\r\n        } catch (error) {\r\n            console.error('Error al procesar la empresa:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\" \r\n                placeholder=\"Nombre\" \r\n                value={nombre} \r\n                onChange={(e) => setNombre(e.target.value)} \r\n            />\r\n            <textarea \r\n                placeholder=\"DescripciÃ³n\" \r\n                value={descripcion} \r\n                onChange={(e) => setDescripcion(e.target.value)} \r\n            />\r\n            <input \r\n                type=\"date\" \r\n                value={fecha} \r\n                onChange={(e) => setFecha(e.target.value)} \r\n                required\r\n            />\r\n\r\n            <button type=\"submit\">{empresa ? 'Editar Empresa' : 'Crear Empresa'}</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default EmpresaForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}